version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}_app
    container_name: container_${PROJECT_NAME}_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
      - citasmedicas_volume:/var/www/html/storage
    env_file: .env
    environment:
      - APP_ENV=${APP_ENV}
    ports:
      - "9000:9000"
    depends_on:
      - db
    networks:
      - citasmedicas_network

  webserver:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - citasmedicas_network

  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - citasmedicas_pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - citasmedicas_network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    command: http webserver:80
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - webserver
    ports:
      - "${NGROK_PORT}:4040" # panel web
    networks:
      - citasmedicas_network

networks:
  citasmedicas_network:
    driver: bridge

volumes:
  citasmedicas_pgdata:
  citasmedicas_volume: